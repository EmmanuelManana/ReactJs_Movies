[{"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\index.js":"1","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\App.js":"2","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\reportWebVitals.js":"3","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Header.js":"4","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Row.js":"5","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\MovieCard.js":"6","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Movies.js":"7","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\AboutMovie.js":"8","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\State\\reducer.js":"9","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\State\\StateProvider.js":"10","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Styles\\StyleAboutMovie.js":"11","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Styles\\StyledMovieCardRibbon.js":"12","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Navbar.js":"13","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\MenuItems.js":"14","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Burger.js":"15","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\RightNav.js":"16","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\AboutDev.js":"17","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\LandingPage.js":"18","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Api\\request.js":"19","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Api\\trelloApi.js":"20","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\API\\request.js":"21","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\API\\trelloApi.js":"22"},{"size":699,"mtime":1611064650040,"results":"23","hashOfConfig":"24"},{"size":987,"mtime":1611512304396,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":224,"mtime":1611512848248,"results":"27","hashOfConfig":"24"},{"size":1604,"mtime":1611578250520,"results":"28","hashOfConfig":"24"},{"size":739,"mtime":1611519869933,"results":"29","hashOfConfig":"24"},{"size":301,"mtime":1611513274627,"results":"30","hashOfConfig":"24"},{"size":8194,"mtime":1611581113522,"results":"31","hashOfConfig":"24"},{"size":383,"mtime":1611517066492,"results":"32","hashOfConfig":"24"},{"size":516,"mtime":1611062618965,"results":"33","hashOfConfig":"24"},{"size":468,"mtime":1611222291241,"results":"34","hashOfConfig":"24"},{"size":449,"mtime":1611220004310,"results":"35","hashOfConfig":"24"},{"size":374,"mtime":1611513259971,"results":"36","hashOfConfig":"24"},{"size":304,"mtime":1611332185225,"results":"37","hashOfConfig":"24"},{"size":1267,"mtime":1611477717042,"results":"38","hashOfConfig":"24"},{"size":1287,"mtime":1611578228434,"results":"39","hashOfConfig":"24"},{"size":861,"mtime":1611579847442,"results":"40","hashOfConfig":"24"},{"size":394,"mtime":1611479589844,"results":"41","hashOfConfig":"24"},{"size":1045,"mtime":1611506905022,"results":"42","hashOfConfig":"24"},{"size":955,"mtime":1611415300982,"results":"43","hashOfConfig":"24"},{"size":599,"mtime":1611582819747,"results":"44","hashOfConfig":"24"},{"size":1513,"mtime":1611582762915,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1p67e4f",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\index.js",[],["92","93"],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\App.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\reportWebVitals.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Header.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Row.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\MovieCard.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Movies.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\AboutMovie.js",["94"],"import \"../Styles/AboutMovie.css\";\r\nimport { StyledRating } from \"../Styles/StyleAboutMovie\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { API_KEY } from \"../API/request\";\r\nimport React, { useEffect, useState } from \"react\";\r\n// import { useStateValue } from \"../State/StateProvider\";\r\nimport Trello, { updateCard, customFieldsId } from \"../API/trelloApi\";\r\n\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\nconst AboutMovie = (props) => {\r\n  const [movie, setMovie] = useState({});\r\n  // const [movieId, dispatch] = useStateValue();\r\n  //get user input\r\n  const [name, setName] = useState(\"\");\r\n  const [surname, setSurname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phoneNumber, setPhoneNumber] = useState(\"\");\r\n  // collect errors\r\n  const [nameError, setNameError] = useState({});\r\n  const [surnameError, setSurnameError] = useState({});\r\n  const [emailError, setEmailError] = useState({});\r\n  const [phoneNumberError, setPhoneNumberError] = useState({});\r\n\r\n  useEffect(() => {\r\n    async function fetchdata() {\r\n      let getMovie = fetch(\r\n        `https://api.themoviedb.org/3/movie/${props.match.params.id}?api_key=${API_KEY}&language=en-US`,\r\n        { method: \"GET\" }\r\n      );\r\n\r\n      try {\r\n        await getMovie\r\n          .then((res) => res.json())\r\n          .then((resi) => {\r\n            console.log(\"fetch\", resi);\r\n            setMovie(resi);\r\n          });\r\n      } catch (e) {\r\n        console.error(e.message);\r\n      }\r\n    }\r\n    fetchdata();\r\n  }, [props.match.params.id]);\r\n\r\n  //validate input\r\n  const validateInput = () => {\r\n    let valid = true;\r\n    let emailErrors = {};\r\n    let surnameErrors = {};\r\n    let nameErrors = {};\r\n    let numberErros = {};\r\n\r\n    let numberREg = new RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/);\r\n    let emailReg = new RegExp(\r\n      /^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i\r\n    );\r\n    let isAlpha = new RegExp(/^[a-zA-Z]+(([',. -][a-zA-Z ])?[a-zA-Z]*)*$/);\r\n\r\n    if (!emailReg.test(email.trim())) {\r\n      emailErrors.nameErrorShort = \"Enter a valid email adress\";\r\n      valid = false;\r\n    }\r\n    if (!isAlpha.test(surname.trim())) {\r\n      surnameErrors.error = \"Enter a valid Surname\";\r\n      valid = false;\r\n    }\r\n    else if(surname.trim().length < 3){\r\n      nameErrors.error = \"Surname is Too Short\";\r\n      valid = false;\r\n    }\r\n    if (!isAlpha.test(name.trim())) {\r\n      nameErrors.error = \"Name must be Alphabets\";\r\n      valid = false;\r\n    }else if(name.trim().length < 3){\r\n      nameErrors.error = \"Name is Too Short\";\r\n      valid = false;\r\n    }\r\n    if (!numberREg.test(phoneNumber)) {\r\n      numberErros.error = \"Please Enter valid cellPhone Number\"\r\n      valid = false;\r\n    }\r\n    setEmailError(emailErrors);\r\n    setSurnameError(surnameErrors);\r\n    setNameError(nameErrors)\r\n    setPhoneNumberError(numberErros)\r\n    return valid;\r\n  };\r\n\r\n  const submitTicket = async (event) => {\r\n    event.preventDefault();\r\n    const isValid = validateInput();\r\n\r\n    if (isValid){\r\n       //create a trello board.then update it with info(custom fields)\r\n    let result = fetch(\r\n      `https://api.trello.com/1/cards?key=${Trello.key}&token=${Trello.token\r\n      }&name=${name + ` ` + surname}&idList=${Trello.idList}&idBoard=${Trello.idBoard\r\n      }&desc=${movie.original_title}`,\r\n      { method: \"POST\" }\r\n    );\r\n\r\n    try {\r\n      await result\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (isValid) {\r\n            updateCard(\r\n              data.id,\r\n              Trello.key,\r\n              Trello.token,\r\n              customFieldsId.Surname,\r\n              name\r\n            );\r\n            updateCard(\r\n              data.id,\r\n              Trello.key,\r\n              Trello.token,\r\n              customFieldsId.FirstName,\r\n              surname\r\n            );\r\n            updateCard(\r\n              data.id,\r\n              Trello.key,\r\n              Trello.token,\r\n              customFieldsId.Email,\r\n              email\r\n            );\r\n            updateCard(\r\n              data.id,\r\n              Trello.key,\r\n              Trello.token,\r\n              customFieldsId.PhoneNumber,\r\n              phoneNumber\r\n            );\r\n            updateCard(\r\n              data.id,\r\n              Trello.key,\r\n              Trello.token,\r\n              customFieldsId.Movie,\r\n              movie.original_title\r\n            );\r\n            alert(\"Your Request has been made, you will hear from us soon!!\")\r\n          }\r\n        });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n    }\r\n   \r\n  };\r\n\r\n  const year = movie.release_date;\r\n  const rating = movie.vote_average * 10;\r\n  let yearArray = [];\r\n  let genres = [];\r\n  if (year) {\r\n    yearArray = year.split(\"-\");\r\n    console.log(\"this is year\", yearArray[0]);\r\n\r\n    genres = movie.genres;\r\n  }\r\n\r\n  if (!movie.id) {\r\n    return <CircularProgress disableShrink />;\r\n  } else {\r\n    return (\r\n      <div className=\"aboutMovie\">\r\n        <div className=\"aboutMovie_container\">\r\n          <div className=\"aboutMovie__left\">\r\n            <img src={`${base_url}${movie.poster_path}`} alt=\"\" />\r\n          </div>\r\n\r\n          <div className=\"aboutMovie__right\">\r\n            <h1 id=\"title\">\r\n              <u>{movie.original_title} </u>\r\n              <p>\r\n                (<small>{yearArray[0]}</small>)\r\n              </p>\r\n            </h1>\r\n            <p>{movie.tagline}</p>\r\n            <StyledRating rating={rating}>\r\n              <h1 id=\"rating\">\r\n                {\" \"}\r\n                <small>Rating:{\"  \" + rating}</small>\r\n              </h1>\r\n            </StyledRating>\r\n            <h2>Overview</h2>\r\n            <p>{movie.overview}</p>\r\n            <h1>Genres</h1>\r\n            <div className=\"aboutMovie__right_genres\">\r\n              {genres.map((i) => (\r\n                <p key={i.id}>{i.name},</p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"aboutMovie__bottom\">\r\n          <form className=\"aboutMovie__form\">\r\n            <input\r\n              className=\"input\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"First Name\"\r\n            />\r\n              {Object.keys(nameError).map((key) => {\r\n              return (\r\n                <div id=\"errors\" key={key}>\r\n                  {nameError[key]}\r\n                </div>\r\n              );\r\n            })}\r\n            <input\r\n              value={surname}\r\n              onChange={(event) => setSurname(event.target.value)}\r\n              type=\"text\"\r\n              placeholder=\"Surname\"\r\n            />\r\n             {Object.keys(surnameError).map((key) => {\r\n              return (\r\n                <div id=\"errors\" key={key}>\r\n                  {surnameError[key]}\r\n                </div>\r\n              );\r\n            })}\r\n            <input\r\n              value={email}\r\n              onChange={(event) => setEmail(event.target.value)}\r\n              type=\"email\"\r\n              placeholder=\"Email Address\"\r\n            />\r\n            {Object.keys(emailError).map((key) => {\r\n              return (\r\n                <div id=\"errors\" key={key}>\r\n                  {emailError[key]}\r\n                </div>\r\n              );\r\n            })}\r\n            <input\r\n              value={phoneNumber}\r\n              onChange={(event) => setPhoneNumber(event.target.value)}\r\n              type=\"number\"\r\n              placeholder=\"Phone Number\"\r\n            />\r\n             {Object.keys(phoneNumberError).map((key) => {\r\n              return (\r\n                <div id=\"errors\" key={key}>\r\n                  {phoneNumberError[key]}\r\n                </div>\r\n              );\r\n            })}\r\n            <button onClick={submitTicket}>Get Movie</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default AboutMovie;\r\n","C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\State\\reducer.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\State\\StateProvider.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Styles\\StyleAboutMovie.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Styles\\StyledMovieCardRibbon.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Navbar.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\MenuItems.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\Burger.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\RightNav.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\AboutDev.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Components\\LandingPage.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Api\\request.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\Api\\trelloApi.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\API\\request.js",[],"C:\\Users\\Emmanuel\\Documents\\React_Projects\\Fullstack-job interview\\reactjs_movies\\src\\API\\trelloApi.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":53,"column":68,"nodeType":"101","messageId":"102","endLine":53,"endColumn":69,"suggestions":"103"},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["106","107"],"no-global-assign","no-unsafe-negation",{"messageId":"108","fix":"109","desc":"110"},{"messageId":"111","fix":"112","desc":"113"},"removeEscape",{"range":"114","text":"115"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"116","text":"117"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1829,1830],"",[1829,1829],"\\"]